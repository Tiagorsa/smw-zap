WHATICKET + CHATGPT

1- Criar credenciais no env

# CREDENCIAIS CHATGPT
ORGANIZATIONGPT=org-****
APIKEYGPT=sk-*******

2- Instalar openai no backend
	a. npm install openai

	// integraçao CHATGPT
	const { MessageMedia } = require("whatsapp-web.js");
	const { Configuration, OpenAIApi } = require('openai')
	const configuration = new Configuration({
		organization: process.env.ORGANIZATIONGPT,
		apiKey: process.env.APIKEYGPT,
	});
	const openai = new OpenAIApi(configuration);
	// gera resposta em texto
	const getDavinciResponse = async (clientText) => {
		const options = {
			model: "text-davinci-003", // Modelo GPT a ser usado
			prompt: clientText, // Texto enviado pelo usuário
			temperature: 1, // Nível de variação das respostas geradas, 1 é o máximo
			max_tokens: 4000 // Quantidade de tokens (palavras) a serem retornadas pelo bot, 4000 é o máximo
		}

		try {
			const response = await openai.createCompletion(options)
			let botResponse = ""
			response.data.choices.forEach(({ text }) => {
				botResponse += text
			})
			return `Chat GPT 🤖\n\n ${botResponse.trim()}`
		} catch (e) {
			return `❌ OpenAI Response Error: ${e.response.data.error.message}`
		}
	}
	// gera a url da imagem
	const getDalleResponse = async (clientText) => {
		const options = {
			prompt: clientText, // Descrição da imagem
			n: 1, // Número de imagens a serem geradas
			size: "1024x1024", // Tamanho da imagem
		}

		try {
			const response = await openai.createImage(options);
			return response.data.data[0].url
		} catch (e) {
			return `❌ OpenAI Response Error: ${e.response.data.error.message}`
		}
	}
	
	=================================================================================

	// wbot chatgpt
    wbot.on('message', async msg => {
        const msgChatGPT = msg.body;
        // mensagem de texto
        if (msgChatGPT.includes('/botzdg ')) {
            const index = msgChatGPT.indexOf(" ");
            const question = msgChatGPT.substring(index + 1);
            getDavinciResponse(question).then((response) => {
                wbot.sendMessage(msg.from, response)
            })
        }
        // imagem
        if (msgChatGPT.includes('/imgzdg ')) {
            const index = msgChatGPT.indexOf(" ");
            const imgDescription = msgChatGPT.substring(index + 1);
            getDalleResponse(imgDescription, msg).then(async (imgUrl) => {
                const media = await MessageMedia.fromUrl(imgUrl);
                wbot.sendMessage(msg.from, media, {caption: imgDescription})
            })
        }
    });